# cat << EOF > /dev/null
# The above line allows us to embed bash at the end of the file.

# Automatically install TPM if not already installed.
if "test ! -d ~/.tmux/plugins/tpm" \
    "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

# TPM plugins.
## Press Ctrl-a-I to install new plugins.
## Press Ctrl-a-u to uninstall plugins.
## Press Ctrl-a-U to update plugins.
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-net-speed'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'thewtex/tmux-mem-cpu-load'
set -g @plugin 'RedBug312/tmux-concentrate'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
# set -g @plugin 'erikw/tmux-powerline'
# set -g @plugin 'maxattax97/tmux-powerline'

# Plugin configuration.
set -g @resurrect-capture-pane-contents 'on'

set -g @continuum-boot 'off'
set -g @continuum-restore 'off'

set -g @prefix_highlight_fg 'colour255'
set -g @prefix_highlight_bg 'colour033'
set -g @prefix_highlight_output_prefix '#[fg=colour249]#[bg=colour033]#[fg=colour255] '
set -g @prefix_highlight_output_suffix ' #[fg=colour033]#[bg=colour234]'
set -g @prefix_highlight_empty_prompt '#[fg=colour249]#[bg=colour234]     '

set -g @concentrate-key g

set -g @net_speed_format "#[fg=colour214]D %10s #[fg=colour033]U %10s#[fg=default]"

set -g @sysstat_cpu_color_low "colour046"
set -g @sysstat_cpu_color_medium "colour033"
set -g @sysstat_cpu_color_stress "colour196"
set -g @sysstat_mem_color_low "colour046"
set -g @sysstat_mem_color_medium "colour033"
set -g @sysstat_mem_color_stress "colour196"
set -g @sysstat_swap_color_low "colour046"
set -g @sysstat_swap_color_medium "colour033"
set -g @sysstat_swap_color_stress "colour196"
set -g @sysstat_cpu_view_tmpl '#[fg=colour255]C #[fg=#{cpu.color}]#{cpu.pused}'
set -g @sysstat_mem_view_tmpl '#[fg=colour255]M #[fg=#{mem.color}]#{mem.pused}'
set -g @sysstat_swap_view_tmpl '#[fg=colour255]S #[fg=#{swap.color}]#{swap.pused}'

set -g @batt_charged_icon ""
set -g @batt_charging_icon ""
set -g @batt_attached_icon ""
set -g @batt_full_charge_icon ""
set -g @batt_high_charge_icon ""
set -g @batt_medium_charge_icon ""
set -g @batt_low_charge_icon ""
set -g @batt_color_full_charge "#[fg=default]"
set -g @batt_color_high_charge "#[fg=colour046]"
set -g @batt_color_medium_charge "#[fg=colour214]"
set -g @batt_color_low_charge "#[fg=colour196]"
set -g @batt_color_charging "#[fg=colour033]"

set -g @net_speed_format " %8s  %8s"

# Sensible: Fix the colors.
#set -g default-terminal "xterm-256color"
#set -g default-terminal "xterm-256color-italic"
set-option -ga terminal-overrides ",xterm-256color:Tc,rxvt-unicode-256color:Tc,screen-256color:Tc"
#set -ga terminal-overrides ",xterm-256color:Tc"


# Bind to Ctrl-a instead of Ctrl-b since Vim uses it.
set-option -g prefix C-a
# bind-key C-a last-window


# Use zsh by default.
set-option -g default-shell /bin/zsh
#set-option -g default-terminal "xterm-256color"

# Key bindings.
bind-key v split-window -h
bind-key b split-window
## Pain control:
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R
#bind [ previous-window
#bind ] next-windowa
#bind [ copy-mode-vi
# Resize with Alt-arrow.
bind -n M-up resize-pane -U 1
bind -n M-down resize-pane -D 1
bind -n M-left resize-pane -L 1
bind -n M-right resize-pane -R 1
bind -n M-k resize-pane -U 3
bind -n M-j resize-pane -D 3
bind -n M-h resize-pane -L 3
bind -n M-l resize-pane -R 3

## Allows us to use C-a a <command> to send commands to a TMUX session inside
## another TMUX session
bind-key C-a send-prefix

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

## Reload configuration.
bind r source-file ~/.tmux.conf \; display-message "Configuration reloaded."

## Enable mouse.
set -g mouse on
## Allow mouse toggling for things like copy paste.
bind m set -g mouse on \; display-message "Mouse enabled."
bind M set -g mouse off \; display-message "Mouse disabled."
# bind -n C-s set synchronize-panes

# Various comfort settings.
## Automatic window rename.
set -g allow-rename on
set -g automatic-rename on
set -g renumber-windows on

## Sensible: Rather than constraining window size to the maximum size of any
## client connected to the *session*, constrain window size to the maximum size
## of any client connected to *that window*. Much more reasonable.
# set -g aggressive-resize on

## Activity monitoring
set -g monitor-activity off # Only for bell.
set -g visual-activity off # Disables annoying updates on htop?
set -g display-time 1500
## Sets terminal titles.
set -g set-titles on
set -g bell-action none

## Start windows and panes at 1 instead of 0 (for Ctrl-a 1 jump).
set -g base-index 1
set -g pane-base-index 1

## Sensible: Reduce the escape time to 0, fixes vim mode switching delay.
# set -s escape-time 0

## Powerline.
run-shell "tmux set-environment -g TMUX_VERSION_MAJOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f1 | sed 's/[^0-9]*//g')"
run-shell "tmux set-environment -g TMUX_VERSION_MINOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f2 | sed 's/[^0-9]*//g')"

## Sensible: Vi copypaste mode, makes more sense even to us Vim users.
# set-option -g mode-keys emacs
# if-shell "test '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 4 \)'" 'bind-key -Tcopy-mode-vi v send -X begin-selection; bind-key -Tcopy-mode-vi y send -X copy-selection-and-cancel'
# if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 4\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'bind-key -t vi-copy v begin-selection; bind-key -t vi-copy y copy-selection'

# Status bar.
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 2\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'set-option -g status-utf8 on'

# Remove mouse mode fail.
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 1\)' 'set -g mouse off'
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 1\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'set -g mode-mouse off'

# Fix pane_current_path on new window and splits.
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" 'unbind c; bind c new-window -c "#{pane_current_path}"'
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" "unbind '\"'; bind '\"' split-window -v -c '#{pane_current_path}'"
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" 'unbind v; bind v split-window -h -c "#{pane_current_path}"'
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" 'unbind %; bind % split-window -h -c "#{pane_current_path}"'


# Solarized color scheme.
# set-option -g status-bg '#073642' #base02
# set-option -g status-fg '#b58900' #yellow
#set-option -g status-fg colour255
#set-option -g status-bg colour234
#set-option -g status-attr default
set-option -g status-style "fg=colour255 bg=colour234"

## Default window title colors.
# set-option -g window-status-fg '#839496' #base0
#set-option -g window-status-fg colour249
#set-option -g window-status-bg colour236
#set-option -g window-status-attr dim
set-option -g window-status-style "fg=colour255 bg=colour236 dim"

## Active and alert window title colors.
# set-option -g window-status-current-fg '#cb4b16' #orange
#set-option -g window-status-current-fg colour033
#set-option -g window-status-current-bg colour232
#set-option -g window-status-current-attr default
set-option -g window-status-current-style "fg=colour033 bg=colour232"
#set-option -g window-status-bell-fg colour196
#set-option -g window-status-bell-bg default
#set-option -g window-status-bell-attr default
set-option -g window-status-bell-style "fg=colour196 bg=default"

## Pane border.
# set-option -g pane-border-fg '#073642' #base02
# set-option -g pane-active-border-fg '#586e75' #base01
#set-option -g pane-border-fg colour234
#set-option -g pane-active-border-fg colour255
set-option -g pane-border-style "fg=colour234"
set-option -g pane-active-border-style "fg=colour255"

## Message text.
# set-option -g message-bg '#073642' #base02
# set-option -g message-fg '#cb4b16' #orange
#set-option -g message-fg colour214
#set-option -g message-bg colour234
set-option -g message-style "fg=colour214 bg=colour234"
# set-option -g message-attr bold

## Pane number display.
# set-option -g display-panes-active-colour '#268bd2' #blue
# set-option -g display-panes-colour '#cb4b16' #orange
set-option -g display-panes-active-colour colour196
set-option -g display-panes-colour colour214

## Window modes.
#set-option -g mode-fg colour255
#set-option -g mode-bg colour234
set-option -g mode-style "fg=colour255 bg=colour234"

## Clock.
# set-option -g clock-mode-colour '#859900'  #green
set-option -g clock-mode-colour colour255
set-option -g clock-mode-style 24

## Alignment.
set -g status-interval 5
set -g status-justify centre # center align window list
set -g status-left-length 128
set -g status-right-length 256
set-option -g status-position top

## Status bar formatting.
# set -g status-left '#[fg=#859900]#H #[fg=#002b36] #[fg=#859900,bright]#(uname -r | cut -c 1-6)#[default]'
# set -g status-right '#[fg=#268bd2]ﰵ         #{upload_speed} #[fg=#cb4b16]#{download_speed}ﰬ#[fg=#073642]#[bg=#855900] #{cpu_fg_color} #{cpu_percentage} #{battery_status_fg} #{battery_percentage} #[fg=#859900,bg=default,bright]#(tmux-mem-cpu-load) #[fg=#dc322f,dim,bg=default]#(uptime | cut -f 3-6 -d " " | cut -f 1 -d ",") #[fg=#93a1a1,bg=default]%a %l:%M:%S %p#[default] #[fg=#268bd2]%Y-%m-%d'
set -g status-left '#[fg=colour232]#[bg=colour255]  #H:#S #[fg=colour255]#[bg=colour249]\
#[fg=colour232]#[bg=colour249] 直#(cut -c3- ~/.tmux.conf | sh -s _ip_address) #{prefix_highlight}\
#[default]'

# #[fg=colour232]#[bg=colour243]  #(uptime| cut -d" " -f7-|cut -d, -f1) #[fg=colour243]#[bg=colour234]\

set -g status-right '#[default]\
#[fg=colour249]#[fg=colour232]#[bg=colour249]  %H:%M:%S %m-%d-%y'

# #[fg=colour236]#[fg=colour255]#[bg=colour236] #{sysstat_cpu} #{sysstat_mem} #{sysstat_swap} \
# #[fg=colour238]#[fg=colour255]#[bg=colour238] #{net_speed} \
# #[fg=colour240]#[fg=colour255]#[bg=colour240] #{battery_status_fg}#{battery_icon} #{battery_percentage} \
# #[fg=colour243]#[fg=colour232]#[bg=colour243] M #(cut -c3- ~/.tmux.conf | sh -s _used_memory_percent)% \
# #[fg=colour249]#[fg=colour232]#[bg=colour249] C #(cut -c3- ~/.tmux.conf | sh -s _used_cpu_percent)% \

set-option -g window-status-format '  #I #W #F  '
set-option -g window-status-current-format '#[fg=colour234] #[fg=colour033]#I #W #F #[fg=colour234]'


# Install TPM if it is not installed.
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Must remain at bottom to kick off TPM.
run -b '$HOME/.tmux/plugins/tpm/tpm'

# Embedded bash script.
# EOF
#
# # Exit the script if any statement returns a non-true return value.
# set -e
#
# export LC_NUMERIC=C
#
# __newline='
# '
#
# _apply() {
#   echo "Embedded bash applied."
# }
#
# _ip_address() {
#   ip -brief -4 a show | awk -F'[\t\n/ ]+' '$2 == "UP" { print $3; exit}'
# }
#
# _used_cpu_percent() {
#   top -bn1 | sed -n '/Cpu/p' | awk '{printf("%.1f", 100.0 - $8) }'
# }
#
# _used_memory_percent() {
#   free | grep Mem | awk '{ printf("%.2f", $3/$2 * 100.0) }'
# }
#
# "$@"
