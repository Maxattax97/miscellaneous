#=============================================================================
# dark_powered.toml --- dark powered configuration example for SpaceVim
# Copyright (c) 2016-2017 Wang Shidong & Contributors
# Author: Wang Shidong < wsdjeg at 163.com >
# URL: https://spacevim.org
# License: GPLv3
#=============================================================================

# All SpaceVim option below [option] section
[options]
    # Bootstrap hooks
    bootstrap_before = "bootstrap#before"
    bootstrap_after = "bootstrap#after"

    # Aesthetic
    colorscheme = "NeoSolarized"
    colorscheme_default = "desert"
    background = "dark"
    enable_guicolors = true
    statusline_separator = "arrow"
    statusline_inactive_separator = "arrow"
    enable_tabline_filetype_icon = true
    enable_statusline_display_mode = false # ???
    error_symbol = "x"
    warning_symbol = "!"
    info_symbol = "i"
    buffer_index_type = 2

    # Automation
    autocomplete_parens = true
    autocomplete_method = "coc" # :call coc#util#build()
    windows_smartclose = ""

    # Tooling
    filemanager = "nerdtree"

    # Code
    enable_neomake = false
    enable_ale = true
    lint_on_the_fly = true
    default_indent = 4
    expand_tab = true
    max_column = 80

    # Plugins
    disabled_plugins = [
        "Clamp", # Prefer ~clangd~ cquery via LSP
        "javacomplete2" # Prefer eclipse jdt
    ]

[[custom_plugins]]
    name = "tpope/vim-sleuth"
[[custom_plugins]]
    name = "sheerun/vim-polyglot"
[[custom_plugins]]
    name = "sirtaj/vim-openscad"
[[custom_plugins]]
    name = "tpope/vim-abolish"
[[custom_plugins]]
    name = "tclem/vim-arduino"
[[custom_plugins]]
    name = "tmux-plugins/vim-tmux-focus-events"
[[custom_plugins]]
    name = "lygaret/autohighlight.vim"

[[layers]]
    name = "autocomplete"
    auto-completion-return-key-behavior = "smart"
    auto-completion-tab-key-behavior = "cycle"
    auto-completion-delay = 10
    # TODO: Battery conservation by delayed autocompletion.
    # https://github.com/w0rp/ale#faq-my-battery-is-sad
    # TODO: Install LSP's
[[layers]]
    # SPC '
    name = "shell"
    default_position = "top"
    default_height = 65
[[layers]]
    name = "colorscheme"
[[layers]]
    # SPC g .
    name = "VersionControl"
[[layers]]
    # SPC g
    name = "git"
[[layers]]
    # SPC g h
    name = "github"
    # TODO: Setup Github token login
[[layers]]
    # SPC e
    # Install: npm install -g eslint eslint-config-airbnb
    name = "checkers"
    # TODO: Battery conservation by delayed linting.
[[layers]]
    name = "ui"
[[layers]]
    name = "tools"
[[layers]]
    # Install: dnf install global global-ctags
    name = "tags"
[[layers]]
    # CTL p
    name = "denite"
[[layers]]
    # SPC d
    name = "debug"
[[layers]]
    name = "edit"
[[layers]]
    # SPC f
    name = "sudo"
[[layers]]
    # CTL <h|j|k|l>
    name = "tmux"

[[layers]]
    name = "lsp"
    filetypes = [
        ## "python" # Install: pip install --user 'python-language-server[all]'
        ## "openscad",
        ## "json",
        # "sh", # Install: npm install -g bash-language-server
        # "dockerfile", # Install: npm install -g dockerfile-language-server-nodejs
        # "javascript", # Install: npm install -g javascript-typescript-langserver
        # "c", # Install: cquery (https://github.com/cquery-project)
        # "cpp",
        # "java" # Install: eclipse-jdt (https://github.com/eclipse/eclipse.jdt.ls)
    ]
    [layers.override_cmd]
        ## python = ["pyls", "--check-parent-process"]
        # json = ["python3", "/home/max/src/pygls/examples/json-extension/server/__main__.py"]
        # openscad = ["tcp://127.0.0.1:2087"]
        # dockerfile = ["docker-langserver", "--stdio"]
        # c = ["cquery", "--log-file=/tmp/cquery.log", '--init={"cacheDirectory":"/tmp/cquery/", "completion": {"filterAndSort": false}}']
        # cpp = ["cquery", "--log-file=/tmp/cquery.log", '--init={"cacheDirectory":"/tmp/cquery/", "completion": {"filterAndSort": false}}']
        # java = ["eclipse-jdt"]
    # TODO: Battery saving techniques.
[[layers]]
    # Install: pip install flake8 yapf autoflake isort
    enable = false
    name = "lang#python"
    format-on-save = 1
[[layers]]
    name = "lang#java"
    enable = false
#[[layers]]
    ## Install: dnf install clang clang-libs
    #name = "lang#c"
    #clang_executable = "/usr/bin/clang"
    #libclang_path = "/usr/lib64/libclang.so.7"
    #[layer.clang_std]
        #c = "gnu11"
        #cpp = "gnu++11"
        #objc = "gnu11"
        #objcpp = "gnu++11"
[[layers]]
    enable = false
    name = "lang#sh"
[[layers]]
    # SPC j
    enable = false
    name = "lang#javascript"
[[layers]]
    # Install: npm install -g remark remark-cli remark-stringify
    enable = false
    name = "lang#markdown"
[[layers]]
    # Install: npm install -g typescript javascript-typescript-langserver
    enable = false
    name = "lang#typescript"
[[layers]]
    # Install: curl https://sh.rustup.rs -sSf | sh
    # Install: rustup component add rust-src
    # Install: cargo install racer
    enable = false
    name = "lang#rust"
    recommended-style = true
[[layers]]
    name = "lang#r"
